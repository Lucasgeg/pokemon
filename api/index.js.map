{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\dev\\pokedex\\app\\root.tsx", "../app/components/ErrorMessage.tsx", "C:\\dev\\pokedex\\app\\routes\\pokedex\\$pokemonId.tsx", "../app/components/Logout.tsx", "../app/components/MyPokedexButton.tsx", "../app/components/Menu.tsx", "../app/utils/prisma.server.ts", "../app/utils/auth.server.ts", "../app/utils/users.server.ts", "C:\\dev\\pokedex\\app\\routes\\my-pokedex\\index.tsx", "../app/components/PokeCard.tsx", "../app/components/PokeBallLoading.tsx", "C:\\dev\\pokedex\\app\\routes\\logout.ts", "C:\\dev\\pokedex\\app\\routes\\index.tsx", "C:\\dev\\pokedex\\app\\routes\\login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { Links, LiveReload, Meta, Outlet, Scripts } from \"@remix-run/react\";\nimport vanillaStyle from \"./styles/pokedex.css\";\nimport styles from \"./styles/app.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport pikachuError from \"./assets/pikachuError.png\";\nimport { ErrorMessage } from \"./components/ErrorMessage\";\n\nconst queryClient = new QueryClient();\n\nexport function links() {\n  return [\n    { rel: \"stylesheet\", href: styles },\n    { rel: \"stylesheet\", href: vanillaStyle },\n  ];\n}\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Pokedex! Catch'em all!\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\nfunction Document({\n  children,\n  title = \"Pokedex, attrapez les tous\",\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <title>{title}</title>\n        <Links />\n      </head>\n      <body id=\"body\" className={`max-w-7xl mx-auto bg-yellow-400 `}>\n        {children}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\nexport default function App() {\n  return (\n    <Document>\n      <QueryClientProvider client={queryClient}>\n        <Outlet />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document title=\"Pika?\">\n      <ErrorMessage error={error} />\n    </Document>\n  );\n}\n", "import clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\nimport pikachuError from \"~/assets/pikachuError.png\";\r\n\r\nexport const ErrorMessage = ({ error }: { error: Error }) => {\r\n  const [toggleIsOpen, setToggleIsOpen] = useState(false);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    setToggleIsOpen(!toggleIsOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"border-8 border-red-600 rounded-full w-3/4 mx-auto header  bg-orange-200 text-lg mb-3 p-3 mt-5 lg:mt-10 font-comfortaa text-center\">\r\n        <h1>Pikachu did a mistake!</h1>\r\n        <p>\r\n          Dear trainer, we have a special mission for you, <br />\r\n          can you please contact the Master Tamer and say him this message\r\n          please?\r\n        </p>\r\n      </div>\r\n      <div className=\"bg-white w-1/2 mx-auto text-center h-fit\">\r\n        <p onClick={handleClick} className=\"cursor-pointer\">\r\n          Secret Message:\r\n        </p>\r\n        <br />\r\n        <span\r\n          className={clsx(\r\n            `errorMessage\r\n            ease-in-out duration-300\r\n            ${\r\n              toggleIsOpen\r\n                ? \"relative translate-y-0 z-0\"\r\n                : \"relative -translate-y-full -z-10\"\r\n            }          \r\n            `\r\n          )}\r\n        >\r\n          {error.message}\r\n        </span>\r\n      </div>\r\n      <img\r\n        src={pikachuError}\r\n        alt=\"Pikachu break the website!\"\r\n        className=\"max-w-2xl -mt-12 mx-auto\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { NavLink, useLoaderData, useParams } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\nimport pikachuSearch from \"~/assets/pikachuSearch.png\";\r\nimport { Menu } from \"~/components/Menu\";\r\nimport { getUserId } from \"~/utils/auth.server\";\r\nimport { getUserName } from \"~/utils/users.server\";\r\n\r\ntype Pokemon = {\r\n  name: string;\r\n  id: number;\r\n  sprites: {\r\n    front_default: string;\r\n    other: {\r\n      home: { front_default: string };\r\n      dream_world: {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  types: [{ type: { name: string } }];\r\n  abilities: [{ ability: { name: string } }];\r\n  height: number;\r\n  weight: number;\r\n};\r\n\r\ntype LoaderData = {\r\n  pokemonDetail: Pokemon;\r\n  userName: string | null | undefined;\r\n};\r\nexport const loader: LoaderFunction = async ({ params, request }) => {\r\n  const userId = await getUserId(request);\r\n  const userName = await getUserName(userId);\r\n  const res = await axios.get(\r\n    `https://pokeapi.co/api/v2/pokemon/${params.pokemonId}`\r\n  );\r\n\r\n  const pokemonDetail: Pokemon = res.data;\r\n  const data: LoaderData = {\r\n    pokemonDetail,\r\n    userName,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport default function PokemonById() {\r\n  const { pokemonDetail, userName } = useLoaderData<LoaderData>();\r\n  const numberOfTypes = pokemonDetail.types.length;\r\n  const numberOfAbilities = pokemonDetail.abilities.length;\r\n  const handlePrev = () => {\r\n    return history.back();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu userName={userName} />\r\n      <div\r\n        className=\" w-fit bg-amber-200 p-1 text-center my-3 border-2 border-white/25 rounded-lg cursor-pointer\"\r\n        onClick={handlePrev}\r\n      >\r\n        Previous\r\n      </div>\r\n      <div className=\"border-8 border-red-600 rounded-full w-3/4 mx-auto header  bg-orange-200 text-lg mb-3 p-3 md:mt-10\">\r\n        <h1 className=\"text-center \">\r\n          Individual page of : <br />\r\n          <span\r\n            className={\r\n              \"font-bold text-2xl name\" + pokemonDetail.types[0].type.name\r\n            }\r\n          >\r\n            <p className=\" first-letter:uppercase\">{pokemonDetail.name}</p>\r\n          </span>\r\n        </h1>\r\n      </div>\r\n      {/* Carte du Pokemon */}\r\n      <div\r\n        className={clsx(\r\n          \"card rounded-3xl border-[10px] border-white/25 grid grid-cols-12 p-3 m-3 \",\r\n          pokemonDetail.types[0].type.name\r\n        )}\r\n      >\r\n        <img\r\n          src={\r\n            pokemonDetail.sprites.other.home.front_default\r\n              ? pokemonDetail.sprites.other.home.front_default\r\n              : pokemonDetail.sprites.other.dream_world.front_default\r\n          }\r\n          alt={\"Picture of \" + pokemonDetail.name}\r\n          className=\"col-span-12 mx-auto md:col-span-4 my-auto\"\r\n        />\r\n\r\n        <table className=\"col-span-12 sm:col-start-1 sm:col-span-4 sm:mb-6 md:col-span-3 \">\r\n          <thead className=\"\">\r\n            <tr className=\"exeption\">\r\n              <th colSpan={2} className=\" h-14\">\r\n                Specific Informations\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"  \">\r\n            <tr className=\"\">\r\n              <th>ID:</th>\r\n              <td>{pokemonDetail.id}</td>\r\n            </tr>\r\n            {pokemonDetail.types.map((type, index) => (\r\n              <tr key={index}>\r\n                <th>Type {numberOfTypes > 1 ? index + 1 : \"\"}:</th>\r\n                <td className=\"first-letter:uppercase\">{type.type.name}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <th>Heigh:</th>\r\n              <td>{pokemonDetail.height}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Weight</th>\r\n              <td>{pokemonDetail.weight}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <table className=\"col-span-12 sm:col-end-13 sm:col-span-4 md:col-span-3 md:col-end-13\">\r\n          <thead className=\"\">\r\n            <tr className=\"exeption \">\r\n              <th colSpan={2} className=\"h-14\">\r\n                Basic Abilities\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pokemonDetail.abilities.map((ability, index) => (\r\n              <tr key={index}>\r\n                <th>Ability {numberOfAbilities > 1 ? index + 1 : \"\"}</th>\r\n                <td className=\"first-letter:uppercase\">\r\n                  {ability.ability.name}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport function ErrorBoundary() {\r\n  const params = useParams();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  return (\r\n    <div className=\"error-container flex flex-col justify-center w-full\">\r\n      <h1 className=\" border-8 border-red-600 rounded-full w-3/4 mx-auto header  bg-orange-200 text-lg mb-3 p-3 mt-5 lg:mt-10 text-center font-comfortaa\">\r\n        {`Error ! We didn't find pokemon number \"${params.pokemonId}\", try an other one please `}\r\n      </h1>\r\n      <form className=\" text-center mx-auto \" action={`/pokedex/${search}`}>\r\n        <input\r\n          className=\" text-center mx-auto my-5\"\r\n          placeholder=\"Pokemon name or ID\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input type=\"submit\" className=\"my-5 button\" value={\"Search\"} />\r\n        <NavLink to={\"/\"} className=\"button\">\r\n          {\" \"}\r\n          Home{\" \"}\r\n        </NavLink>\r\n        <img\r\n          src={pikachuSearch}\r\n          alt=\"picture of pikachu searching\"\r\n          className=\"max-w-md\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n", "type PropsType = {\r\n  userName: string | null | undefined | boolean;\r\n};\r\n\r\nexport function Logout({ userName }: PropsType) {\r\n  const action = userName ? \"logout\" : \"login\";\r\n  return (\r\n    <div className=\"border-2 bg-red-400 p-3 rounded-xl lg:mb-1 w-32 h-[100px] mb-2 flex\">\r\n      <form action={`/${action}`} method=\"post\" className=\"m-auto\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"first-letter:uppercase font-pokemon m-auto\"\r\n        >\r\n          {action == \"login\" ? (\r\n            <span>\r\n              Connect <br />\r\n              or <br /> Subscribe\r\n            </span>\r\n          ) : (\r\n            <p>Disconnect</p>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n", "const MyPokedexButton = () => {\r\n  return (\r\n    <div className=\" border-2 bg-red-400 rounded-xl w-32 flex h-[100px] \">\r\n      <form action={`/my-pokedex`} className=\"m-auto\">\r\n        <button type=\"submit\" className=\"first-letter:uppercase font-pokemon \">\r\n          My <br /> pokedex\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPokedexButton;\r\n", "import Logout from \"./Logout\";\r\nimport MyPokedexButton from \"./MyPokedexButton\";\r\nimport PokeballButton from \"../assets/pokeballButton.png\";\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\ntype Menu = {\r\n  userName: string | null | undefined;\r\n};\r\n\r\nexport const Menu = ({ userName }: Menu) => {\r\n  const [toggleOn, setToggleOn] = useState(false);\r\n\r\n  const handleClickPokeballButton = (e: React.MouseEvent<HTMLElement>) => {\r\n    setToggleOn(!toggleOn);\r\n  };\r\n  return (\r\n    <nav className=\"fixed top-1/4 lg:absolute lg:w-full lg:top-0 lg:right-0 z-10 lg:flex  \">\r\n      <img\r\n        src={PokeballButton}\r\n        alt=\"Bouton pokeball\"\r\n        className=\"w-10 mb-2 cursor-pointer lg:hidden\"\r\n        onClick={handleClickPokeballButton}\r\n      />\r\n      <div\r\n        className={clsx(` menuLinks w-36  h-fit flex flex-col justify-center  items-center  bg-orange-200 bg-opacity-75 p-3 rounded-r-lg border-y-4 border-r-4 border-red-600 ease-in-out duration-300\r\n        ${toggleOn ? \"translate-x-0\" : \"-translate-x-full\"}\r\n        lg:translate-x-0 lg:bg-transparent lg:border-0 lg:flex-row lg:justify-between lg:w-full lg:items-center\r\n        `)}\r\n      >\r\n        <Logout userName={userName} />\r\n        {userName ? <MyPokedexButton /> : null}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n", "import { PrismaClient } from \"@prisma/client\";\r\nlet prisma: PrismaClient;\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n  prisma.$connect();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n    global.__db.$connect();\r\n  }\r\n  prisma = global.__db;\r\n}\r\n\r\nexport * from \"@prisma/client\";\r\nexport { prisma };\r\n", "import { prisma } from \"./prisma.server\";\r\nimport type { Forms } from \"./types.server\";\r\nimport { createCookieSessionStorage, json, redirect } from \"@remix-run/node\";\r\nimport { createUser } from \"./users.server\";\r\nimport bcrypt from \"bcryptjs\";\r\nconst token = process.env.TOKEN_SECRET;\r\nif (!token) {\r\n  throw new Error(\"TOKEN_SECRET must be set\");\r\n}\r\n\r\nconst storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"pokedex-session\",\r\n    secure: process.env.NODE_ENV == \"production\",\r\n    secrets: [token],\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n});\r\n\r\n//Create user\r\nexport const register = async (form: Forms) => {\r\n  const userExist = await prisma.user.count({\r\n    where: { username: form.username },\r\n  });\r\n  if (form.username.length < 3)\r\n    return json(\r\n      { usernameError: \"Username must be at least 3 characters\" },\r\n      { status: 400 }\r\n    );\r\n  if (form.password.length < 5)\r\n    return json(\r\n      { passwordError: \"Password must be at least 5 characters\" },\r\n      { status: 400 }\r\n    );\r\n  if (userExist) {\r\n    return json(\r\n      {\r\n        usernameError: \"User already exist\",\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const newUser = await createUser(form);\r\n\r\n  if (!newUser) {\r\n    return json({ error: \"something went wrong\" }, { status: 400 });\r\n  }\r\n  return createUserSession(newUser.id, \"/\");\r\n};\r\n\r\nexport const login = async (form: Forms) => {\r\n  const user = await prisma.user.findUnique({\r\n    where: { username: form.username },\r\n  });\r\n\r\n  if (!user || !(await bcrypt.compare(form.password, user.password))) {\r\n    return json(\r\n      { usernameError: \"Invalid username or password\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  return createUserSession(user.id, \"/\");\r\n};\r\n\r\n//create a session\r\n\r\nexport const createUserSession = async (userId: string, redirectTo: string) => {\r\n  const session = await storage.getSession();\r\n  session.set(\"userId\", userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.commitSession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const session = await getUserSession(request);\r\n\r\n  const userId = session.get(\"userId\");\r\n\r\n  if (!userId || typeof userId !== \"string\") {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\nfunction getUserSession(request: Request) {\r\n  return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\n\r\nexport async function getUserId(request: Request) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n  if (!userId || typeof userId !== \"string\") return null;\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (typeof userId !== \"string\") return null;\r\n  try {\r\n    const user = await prisma.user.findUnique({\r\n      where: { id: userId },\r\n      select: { id: true, username: true, pokemonNames: true },\r\n    });\r\n    return user;\r\n  } catch {\r\n    throw logout(request);\r\n  }\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getUserSession(request);\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n", "import type { Forms } from \"./types.server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { prisma } from \"./prisma.server\";\r\nimport { json } from \"@remix-run/node\";\r\n\r\nexport const createUser = async (user: Forms) => {\r\n  const passwordHash = await bcrypt.hash(user.password, 10);\r\n\r\n  const newUser = await prisma.user.create({\r\n    data: {\r\n      username: user.username,\r\n      password: passwordHash,\r\n    },\r\n  });\r\n  return { id: newUser.id, username: newUser.username };\r\n};\r\n\r\nexport const getUserName = async (id: string | null) => {\r\n  if (!id) {\r\n    return null;\r\n  }\r\n  const username = await prisma.user.findUnique({\r\n    where: { id },\r\n  });\r\n  return username?.username;\r\n};\r\n\r\nexport const getPokemonList = async (userId: string) => {\r\n  if (!userId) {\r\n    return null;\r\n  }\r\n  const pokemonList = await prisma.user.findMany({\r\n    orderBy: { pokemonIds: \"asc\" },\r\n    where: { id: userId },\r\n    select: { pokemonIds: true, pokemonNames: true },\r\n  });\r\n  return pokemonList;\r\n};\r\nexport const userHaveThePokemon = async (\r\n  userId: string,\r\n  pokemonName: string\r\n) => {\r\n  if (!userId || !pokemonName) return null;\r\n  const inTheList = await prisma.user.findMany({\r\n    where: { id: userId, AND: { pokemonNames: { has: pokemonName } } },\r\n  });\r\n  return inTheList.length;\r\n};\r\n\r\nexport const addPokeObjecttoUser = async (\r\n  userId: string,\r\n  pokemonName: string,\r\n  pokemonId: number\r\n) => {\r\n  if (!userId || !pokemonName || !pokemonId) {\r\n    return null;\r\n  }\r\n  if (await userHaveThePokemon(userId, pokemonName))\r\n    return json({ message: \"Pokemon allready in the DB\" });\r\n  const user = await prisma.user.findUnique({\r\n    where: { id: userId },\r\n  });\r\n  user?.pokemonNames.push(pokemonName);\r\n  user?.pokemonIds.push(pokemonId);\r\n\r\n  return await prisma.user.update({\r\n    where: { id: userId },\r\n    data: {\r\n      pokemonNames: user?.pokemonNames,\r\n      pokemonIds: user?.pokemonIds,\r\n    },\r\n  });\r\n};\r\n/* export const addPokemonToUser = async (\r\n  userId: string,\r\n  pokemonId: string,\r\n  pokemonName: string\r\n) => {\r\n  const res = await prisma.user.findUnique({\r\n    where: { id: userId },\r\n    select: { pokemonIds: true },\r\n  });\r\n  //on recupere la propri\u00E9t\u00E9 pokemon , si res && res.pokemonNames, j'ai au moins un pokemon, donc je fait un nouveau tableau avec\r\n  //ceux que j'avais avant + le nouveau, sinon on initialise un tableau avec celui qu'on viens d'attraper\r\n  const catchedPokemonIdsWithNewOne =\r\n    res && res.pokemonIds\r\n      ? [...res.pokemonIds, pokemonId + pokemonName]\r\n      : [pokemonId + pokemonName];\r\n  //new set du tableau permet de retir\u00E9 les doublons et ne laisse qu'une liste qu'on transforme en array\r\n  const uniquePokemonIds = Array.from(new Set(catchedPokemonIdsWithNewOne));\r\n  await prisma.user.update({\r\n    where: {\r\n      id: userId,\r\n    },\r\n    data: { pokemonIds: { set: uniquePokemonIds } },\r\n  });\r\n\r\n  return json(\r\n    { message: `pokemon n\u00B0: ${pokemonId} succesfully added` },\r\n    { status: 200 }\r\n  );\r\n}; */\r\n\r\nexport const removePokemonFromUser = async (\r\n  userId: string,\r\n  pokemonId: number,\r\n  pokemonName: string\r\n) => {\r\n  const resId = await prisma.user.findUnique({\r\n    where: { id: userId },\r\n    select: { pokemonIds: true },\r\n  });\r\n  const resName = await prisma.user.findUnique({\r\n    where: { id: userId },\r\n    select: { pokemonNames: true },\r\n  });\r\n  //on recupere la propri\u00E9t\u00E9 pokemon , si res && res.pokemonIds, j'ai au moins un pokemon, donc je fait un nouveau tableau avec\r\n  //ceux que j'avais avant + le nouveau, sinon on initialise un tableau avec celui qu'on viens d'attraper\r\n\r\n  const catchedpokemonIdsWithoutId =\r\n    resId && resId.pokemonIds\r\n      ? resId.pokemonIds.filter((p) => p !== pokemonId)\r\n      : undefined;\r\n  const catchedpokemonIdsWithoutName =\r\n    resName && resName.pokemonNames\r\n      ? resName.pokemonNames.filter((p) => p !== pokemonName)\r\n      : undefined;\r\n  await prisma.user.updateMany({\r\n    where: {\r\n      id: userId,\r\n    },\r\n    data: {\r\n      pokemonIds: { set: catchedpokemonIdsWithoutId },\r\n      pokemonNames: { set: catchedpokemonIdsWithoutName },\r\n    },\r\n  });\r\n\r\n  return json(\r\n    { message: `pokemon n\u00B0: ${pokemonId} succesfully removed` },\r\n    { status: 200 }\r\n  );\r\n};\r\n\r\nexport const pokemonGet = async (userId: string, pIds: string[]) => {\r\n  const res = await prisma.user.findUnique({\r\n    where: { id: userId },\r\n    select: {\r\n      pokemonNames: true,\r\n    },\r\n  });\r\n\r\n  if (!res) {\r\n    return null;\r\n  }\r\n\r\n  const { pokemonNames } = res;\r\n\r\n  return pIds.filter((id) => pokemonNames.includes(id));\r\n};\r\n", "import { ActionFunction, json, LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { ErrorMessage } from \"~/components/ErrorMessage\";\r\nimport { Menu } from \"~/components/Menu\";\r\nimport PokeCard from \"~/components/PokeCard\";\r\nimport { getUser } from \"~/utils/auth.server\";\r\nimport {\r\n  addPokeObjecttoUser,\r\n  getPokemonList,\r\n  removePokemonFromUser,\r\n} from \"~/utils/users.server\";\r\n\r\ntype LoaderData = {\r\n  username: string;\r\n  userId: string;\r\n  pokemonIdList: number[];\r\n  pokemonNameList: string[];\r\n};\r\n//////////////////////////////////////////////LOADER/////////////////////////////////////////////////////////\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const user = await getUser(request);\r\n  if (!user) {\r\n    return json({ error: \"user not found\" });\r\n  }\r\n  const username = user.username;\r\n  const userId = user.id;\r\n  const pokemonList = await getPokemonList(userId);\r\n  if (!pokemonList) {\r\n    return false;\r\n  }\r\n  const pokemonIdList = pokemonList[0].pokemonIds.sort((a, b) => a - b);\r\n  const pokemonNameList = pokemonList[0].pokemonNames;\r\n  const data: LoaderData = {\r\n    userId,\r\n    pokemonIdList,\r\n    pokemonNameList,\r\n    username,\r\n  };\r\n  return json(data);\r\n};\r\n/////////////////////////////////////////////ERROR BOUNDARY/////////////////////////////////////////////////////////\r\nexport const ErrorBoundary = ({ error }: { error: Error }) => {\r\n  return <ErrorMessage error={error} />;\r\n};\r\n/////////////////////////////////////////////ACTION/////////////////////////////////////////////////////////////////\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const userId = form.get(\"userId\");\r\n  const pokemonId = Number(form.get(\"pokemonId\"));\r\n  const pokemonName = form.get(\"pokemonName\");\r\n  const action = form.get(\"_action\");\r\n\r\n  if (\r\n    typeof userId !== \"string\" ||\r\n    typeof pokemonId !== \"number\" ||\r\n    typeof pokemonName !== \"string\"\r\n  ) {\r\n    return false;\r\n  }\r\n  switch (action) {\r\n    case \"add\": {\r\n      return await addPokeObjecttoUser(userId, pokemonName, pokemonId);\r\n    }\r\n    case \"remove\": {\r\n      return await removePokemonFromUser(userId, pokemonId, pokemonName);\r\n    }\r\n    default:\r\n      throw new Error(\"Error on the action switch\");\r\n  }\r\n};\r\n\r\n//////////////////////////////////////////////MAIN PAGE/////////////////////////////////////////////////////////////\r\nexport default function index() {\r\n  const { username, userId, pokemonIdList, pokemonNameList } =\r\n    useLoaderData<LoaderData>();\r\n  return (\r\n    <div className=\"w-full flex flex-col font-comfortaa font-semibold p-3 \">\r\n      Hello {username} Page!\r\n      <ul className=\" grid grid-cols-12 gap-4 px-2 md:px-4 mt-5 \">\r\n        {pokemonIdList.map((i) => (\r\n          <PokeCard\r\n            pokemonName=\"\"\r\n            catchedPokemons={pokemonNameList}\r\n            userId={userId}\r\n            pokemonId={i}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n", "import {\r\n  Form,\r\n  Link,\r\n  NavLink,\r\n  useLocation,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\nimport clsx from \"clsx\";\r\nimport { PokeballLoading } from \"./PokeBallLoading\";\r\n\r\ntype pokemon = {\r\n  pokemonName: string;\r\n  userId: string | null;\r\n  catchedPokemons: string[] | null | undefined;\r\n  pokemonId: number | null;\r\n  currentPage: string;\r\n};\r\n\r\ntype PokemonDetailResponse = {\r\n  name: string;\r\n  id: number;\r\n  sprites: {\r\n    front_default: string;\r\n    other: {\r\n      home: { front_default: string };\r\n      dream_world: {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  types: [{ type: { name: string } }];\r\n};\r\n\r\nconst PokeCard = (\r\n  { pokemonName, userId, catchedPokemons, pokemonId, currentPage }: pokemon,\r\n  key: any\r\n) => {\r\n  const hasBeenCatched = pokemonName\r\n    ? catchedPokemons?.includes(pokemonName)\r\n    : catchedPokemons;\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"detail\", pokemonName ? pokemonName : pokemonId],\r\n    (): Promise<{ data: PokemonDetailResponse }> =>\r\n      axios.get(\r\n        `https://pokeapi.co/api/v2/pokemon/${\r\n          pokemonName ? pokemonName : pokemonId\r\n        }`\r\n      )\r\n  );\r\n\r\n  const res = data?.data;\r\n  let transition = useTransition();\r\n  let submitting =\r\n    transition.state === \"submitting\" &&\r\n    transition.submission.formData.get(\"pokemonName\") == `${pokemonName}`;\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <PokeballLoading />\r\n      ) : (\r\n        <li\r\n          key={key}\r\n          className={clsx(\r\n            `rounded-xl border-8 border-white/25 col-span-full md:col-span-6 lg:col-span-2 flex flex-col hover:scale-105 transition duration-150 ease-in-out `,\r\n            res?.types[0].type.name\r\n          )}\r\n        >\r\n          <div className=\"picture mx-auto my-3\">\r\n            <img\r\n              src={\r\n                res?.sprites.other.dream_world.front_default\r\n                  ? res?.sprites.other.dream_world.front_default\r\n                  : res?.sprites.other.home.front_default\r\n              }\r\n              alt={\"picture of\" + pokemonName}\r\n              className=\"h-48 w-auto p-2\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className=\" w-3/4 p-2 cardInfo mx-auto text-center bg-slate-300\">\r\n            <p className=\" text-center\">Name: </p>\r\n            <p className=\" first-letter:uppercase font-pokemon\">\r\n              {pokemonName}\r\n            </p>\r\n            <br />\r\n            {!isLoading && (\r\n              <>\r\n                <p>Id: </p>\r\n                <span>{res?.id}</span>\r\n\r\n                <br />\r\n              </>\r\n            )}\r\n          </div>\r\n          <Link\r\n            to={`/pokedex/${pokemonName ? pokemonName : pokemonId}`}\r\n            className=\"mx-auto my-2\"\r\n          >\r\n            <div className={\"button\"}> Infos </div>\r\n          </Link>\r\n          {userId ? (\r\n            <div className=\"releaseHim mx-auto my-2\">\r\n              <Form method=\"post\">\r\n                <input type=\"hidden\" name=\"userId\" value={userId} />\r\n                <input type=\"hidden\" name=\"pokemonId\" value={res?.id} />\r\n                <input type=\"hidden\" name=\"pokemonName\" value={pokemonName} />\r\n                <input type=\"hidden\" name=\"currentPage\" value={currentPage} />\r\n                <button\r\n                  name=\"_action\"\r\n                  value={hasBeenCatched ? `remove` : `add`}\r\n                  className={`${submitting ? \"button lock\" : \"button\"}`}\r\n                  type=\"submit\"\r\n                  disabled={submitting}\r\n                >\r\n                  {hasBeenCatched ? \"Realease him\" : \"Capture!\"}\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          ) : null}\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokeCard;\r\n", "import Lottie from \"lottie-react\";\r\nimport pokeball from \"~/assets/pokeballLoading.json\";\r\n\r\nexport const PokeballLoading = () => {\r\n  return <Lottie animationData={pokeball} />;\r\n};\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { logout } from \"~/utils/auth.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => logout(request);\r\nexport const loader: LoaderFunction = async () => redirect(\"/\");\r\n", "import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { getUserId } from \"~/utils/auth.server\";\r\nimport {\r\n  addPokeObjecttoUser,\r\n  getUserName,\r\n  pokemonGet,\r\n  removePokemonFromUser,\r\n} from \"~/utils/users.server\";\r\nimport PokeCard from \"~/components/PokeCard\";\r\nimport { Menu } from \"~/components/Menu\";\r\nimport { ErrorMessage } from \"~/components/ErrorMessage\";\r\n\r\n///////////////////////////////////////////TYPESCRIPT///////////////////////////////////////\r\ntype Pokemon = {\r\n  name: string;\r\n  url: string;\r\n  id: number;\r\n  sprite: string | null;\r\n  type: string;\r\n  catchedPokemons: string[] | undefined | null;\r\n  userName: string | null | undefined;\r\n  userId: string;\r\n};\r\ntype PokePagination = { offset: string | null; limit: string | null };\r\ntype LoaderData = {\r\n  indexUrl: string;\r\n  userId: string | null;\r\n  pokemonList: Pokemon[];\r\n  currentPage: string;\r\n  nextContext: PokePagination | null;\r\n  previousContext: PokePagination | null;\r\n  catchedPokemons: string[] | undefined | null;\r\n  userName: string | undefined | null;\r\n};\r\n\r\n//////////////////////////////////////////////ERROR BOUNDARY////////////////////////////////////\r\nexport const ErrorBoundary = ({ error }: { error: Error }) => {\r\n  return <ErrorMessage error={error} />;\r\n};\r\n\r\n/////////////////////////////////////////////////////PAGINATION/////////////////////////////////\r\n\r\nconst getPaginationInfo = (url: string | null) => {\r\n  if (!url) return null;\r\n  const { searchParams } = new URL(url);\r\n  return {\r\n    offset: searchParams.get(\"offset\"),\r\n    limit: searchParams.get(\"limit\"),\r\n  };\r\n};\r\n\r\n//////////////////////////////////////////////LOADER/////////////////////////////////////////\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { searchParams } = new URL(request.url);\r\n  let userId = await getUserId(request);\r\n  const limit = searchParams.get(\"limit\");\r\n\r\n  const offset = searchParams.get(\"offset\");\r\n  const indexUrl = offset ? `/?offset=${offset}` : \"/\";\r\n\r\n  const currentPage = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n  const {\r\n    data: { results, next, previous },\r\n  } = await axios.get(currentPage);\r\n  const pokemonList: Pokemon[] = results;\r\n  let catchedPokemons;\r\n  let userName;\r\n  if (userId) {\r\n    catchedPokemons = await pokemonGet(\r\n      userId,\r\n      pokemonList.map(({ name }) => name)\r\n    );\r\n    userName = await getUserName(userId);\r\n  }\r\n\r\n  const nextContext = getPaginationInfo(next);\r\n  const previousContext = getPaginationInfo(previous);\r\n\r\n  const data: LoaderData = {\r\n    indexUrl,\r\n    userId,\r\n    userName,\r\n    currentPage,\r\n    pokemonList,\r\n    nextContext,\r\n    previousContext,\r\n    catchedPokemons,\r\n  };\r\n\r\n  return json(data);\r\n};\r\n\r\n///////////////////////////////////////////ACTION///////////////////////////////////////\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const userId = form.get(\"userId\");\r\n  const pokemonId = Number(form.get(\"pokemonId\"));\r\n  const pokemonName = form.get(\"pokemonName\");\r\n  const action = form.get(\"_action\");\r\n  const currentPage = form.get(\"currentPage\");\r\n\r\n  if (\r\n    typeof userId !== \"string\" ||\r\n    typeof pokemonId !== \"number\" ||\r\n    typeof pokemonName !== \"string\"\r\n  ) {\r\n    return false;\r\n  }\r\n  switch (action) {\r\n    case \"add\": {\r\n      await addPokeObjecttoUser(userId, pokemonName, pokemonId);\r\n      break;\r\n    }\r\n    case \"remove\": {\r\n      await removePokemonFromUser(userId, pokemonId, pokemonName);\r\n      break;\r\n    }\r\n    default:\r\n      throw new Error(\"Error on the action switch\");\r\n  }\r\n  return redirect(`${currentPage}`);\r\n};\r\n//////////////////////////////////////////////MAIN PAGE/////////////////////////////////////////////////////////////\r\n\r\nexport default function Index() {\r\n  const {\r\n    pokemonList,\r\n    nextContext,\r\n    previousContext,\r\n    catchedPokemons,\r\n    userName,\r\n    userId,\r\n    indexUrl,\r\n  } = useLoaderData<LoaderData>();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\" w-full flex flex-col font-comfortaa font-semibold \">\r\n      <Menu userName={userName} />\r\n\r\n      <div className=\"border-8 border-red-600 rounded-full w-3/4 mx-auto header  bg-orange-200 text-lg mb-3 p-3 mt-5 lg:mt-10\">\r\n        {userName ? (\r\n          <h1 className=\"text-center\">\r\n            Hello{\" \"}\r\n            <div className=\" first-letter:uppercase font-pokemon\">\r\n              {userName}\r\n            </div>{\" \"}\r\n            let's complete your Pokedex!\r\n          </h1>\r\n        ) : (\r\n          <h1 className=\" text-center  \">\r\n            {\" \"}\r\n            Hello dear trainer! <br /> Looking for information? <br />\r\n            You can subscribe if you want to get your own pokedex!{\" \"}\r\n          </h1>\r\n        )}\r\n      </div>\r\n      {/* Ajout d'une barre de recherche */}\r\n      <form className=\" text-center mx-auto\" action={`/pokedex/${search}`}>\r\n        <input\r\n          className=\" text-center mx-auto\"\r\n          placeholder=\"pokemon name or ID\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input type=\"submit\" />\r\n      </form>\r\n      <ul className=\" grid grid-cols-12 gap-4 px-2 md:px-4 mt-5\">\r\n        {pokemonList.map((p) => (\r\n          <PokeCard\r\n            pokemonName={p.name}\r\n            userId={userId}\r\n            key={p.id}\r\n            catchedPokemons={catchedPokemons}\r\n            pokemonId={null}\r\n            currentPage={indexUrl}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"sub_Menu mt-5\">\r\n        {previousContext && (\r\n          <div className=\"menu_Button\">\r\n            <Link\r\n              to={`/?offset=${previousContext.offset}&limit=${previousContext.limit}`}\r\n            >\r\n              Pr\u00E9c\u00E9dent\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {nextContext && (\r\n          <div className=\"menu_Button\">\r\n            <Link\r\n              to={`/?offset=${nextContext.offset}&limit=${nextContext.limit}`}\r\n            >\r\n              Suivant\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useState } from \"react\";\r\nimport { Link, useActionData } from \"@remix-run/react\";\r\nimport { getUser, login, register } from \"~/utils/auth.server\";\r\nimport type { Forms } from \"~/utils/types.server\";\r\nimport { validatePassword, validateUserName } from \"~/utils/validators.server\";\r\nimport { ErrorMessage } from \"~/components/ErrorMessage\";\r\n\r\nexport const ErrorBoundary = ({ error }: { error: Error }) => {\r\n  return <ErrorMessage error={error} />;\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return (await getUser(request)) ? redirect(\"/\") : null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"_action\");\r\n  const username = form.get(\"username\");\r\n  const password = form.get(\"password\");\r\n\r\n  if (\r\n    typeof action !== \"string\" ||\r\n    typeof username !== \"string\" ||\r\n    typeof password !== \"string\"\r\n  ) {\r\n    return json({\r\n      errorMessage: `Form not submitted correctly`,\r\n    });\r\n  }\r\n  switch (action) {\r\n    case \"login\": {\r\n      return await login({ username, password });\r\n    }\r\n    case \"register\": {\r\n      return await register({ username, password });\r\n    }\r\n    default:\r\n      throw new Error(\"Unexpected Login Error\");\r\n  }\r\n  //return await register({ username, password });\r\n};\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData();\r\n  const handleInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    field: string\r\n  ) => {\r\n    setFormData((form: Forms) => ({ ...form, [field]: event.target.value }));\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [action, setAction] = useState(\"login\");\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center mt-40\">\r\n      <button\r\n        onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}\r\n        className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n      >\r\n        {action === \"login\" ? \"S'inscrire\" : \"Se connecter\"}\r\n      </button>\r\n      {action == \"login\" ? (\r\n        <h1 className=\"text-center\">Connect and complete your pokedex!</h1>\r\n      ) : (\r\n        <h1 className=\"text-center\">\r\n          Subscribe and we offer you a free pokedex!\r\n        </h1>\r\n      )}\r\n      <form\r\n        method=\"POST\"\r\n        className=\" w-1/2 flex flex-col justify-center items-center border-2 p-10 bg-blue-400 rounded-xl mt-10\"\r\n      >\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          className={`text-center ${\r\n            actionData ? \"border-2 border-red-400\" : \"\"\r\n          }`}\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={(e) => handleInputChange(e, \"username\")}\r\n        />\r\n        <p className=\"text-white text-sm\">\r\n          {actionData?.usernameError ? actionData?.usernameError : null}\r\n        </p>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          className={`text-center ${\r\n            actionData ? \"border-2 border-red-400 \" : \"\"\r\n          }`}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => handleInputChange(e, \"password\")}\r\n        />\r\n        <p className=\"text-white text-sm\">\r\n          {actionData?.passwordError ? actionData?.passwordError : null}\r\n        </p>\r\n        <button\r\n          type=\"submit\"\r\n          name=\"_action\"\r\n          value={action}\r\n          className=\"rounded-xl mt-5 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n        >\r\n          {action == \"login\" ? \"Se connecter\" : \"S'inscrire\"}\r\n        </button>\r\n      </form>\r\n      <Link to={`/`}>I just want to take a look</Link>\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'975373e1','entry':{'module':'/build/entry.client-NOVFBVPM.js','imports':['/build/_shared/chunk-TF7DY7FC.js','/build/_shared/chunk-A5PSMCZZ.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SWCZP43W.js','imports':['/build/_shared/chunk-SLAKBN4S.js','/build/_shared/chunk-74GVNGU4.js','/build/_shared/chunk-P3UXWYAR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-Y2XXMXA4.js','imports':['/build/_shared/chunk-Q3IT5NDS.js','/build/_shared/chunk-55SQKZBV.js','/build/_shared/chunk-X7DDF7SO.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-XJLCMYII.js','imports':['/build/_shared/chunk-PMDNWKIC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-WJ5U5SW7.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/my-pokedex/index':{'id':'routes/my-pokedex/index','parentId':'root','path':'my-pokedex','index':true,'caseSensitive':undefined,'module':'/build/routes/my-pokedex/index-G7JPSTDN.js','imports':['/build/_shared/chunk-55SQKZBV.js','/build/_shared/chunk-X7DDF7SO.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/pokedex/$pokemonId':{'id':'routes/pokedex/$pokemonId','parentId':'root','path':'pokedex/:pokemonId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pokedex/$pokemonId-HFXKGCHD.js','imports':['/build/_shared/chunk-Q3IT5NDS.js','/build/_shared/chunk-X7DDF7SO.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-975373E1.js'};", "\nimport * as entryServer from \"C:\\\\dev\\\\pokedex\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\dev\\\\pokedex\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\pokedex\\\\$pokemonId.tsx\";\nimport * as route2 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\my-pokedex\\\\index.tsx\";\nimport * as route3 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\logout.ts\";\nimport * as route4 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\index.tsx\";\nimport * as route5 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/pokedex/$pokemonId\": {\n      id: \"routes/pokedex/$pokemonId\",\n      parentId: \"root\",\n      path: \"pokedex/:pokemonId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/my-pokedex/index\": {\n      id: \"routes/my-pokedex/index\",\n      parentId: \"root\",\n      path: \"my-pokedex\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": []
}
