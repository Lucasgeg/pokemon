{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\dev\\pokedex\\app\\root.tsx", "C:\\dev\\pokedex\\app\\routes\\pokedex\\$pokemonId.tsx", "C:\\dev\\pokedex\\app\\routes\\pokedex\\index.tsx", "../app/components/Logout.tsx", "C:\\dev\\pokedex\\app\\routes\\index.tsx", "C:\\dev\\pokedex\\app\\routes\\login.tsx", "../app/utils/prisma.server.ts", "../app/utils/auth.server.ts", "../app/utils/users.server.ts", "../app/utils/validators.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/app.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst queryClient = new QueryClient();\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\nfunction Document({\n  children,\n  title = \"Pokedex, attrapez les tous\",\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <title>{title}</title>\n        <Links />\n      </head>\n      <body className=\" bg-amber-500 max-w-7xl mx-auto\">\n        {children}\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\nexport default function App() {\n  return (\n    <Document>\n      <QueryClientProvider client={queryClient}>\n        <Outlet />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </Document>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { NavLink, useLoaderData, useParams } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\n\r\ntype Pokemon = {\r\n  name: string;\r\n  id: number;\r\n  sprites: {\r\n    front_default: string;\r\n    other: {\r\n      home: { front_default: string };\r\n      dream_world: {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  types: [{ type: { name: string } }];\r\n  abilities: [{ ability: { name: string } }];\r\n  height: number;\r\n  weight: number;\r\n};\r\n\r\ntype LoaderData = {\r\n  pokemonDetail: Pokemon;\r\n};\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  const res = await axios.get(\r\n    `https://pokeapi.co/api/v2/pokemon/${params.pokemonId}`\r\n  );\r\n  const pokemonDetail: Pokemon = res.data;\r\n  const data: LoaderData = {\r\n    pokemonDetail,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport default function PokemonById() {\r\n  const { pokemonDetail } = useLoaderData<LoaderData>();\r\n  const numberOfTypes = pokemonDetail.types.length;\r\n  const numberOfAbilities = pokemonDetail.abilities.length;\r\n  const handlePrev = () => {\r\n    return history.back();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\" w-fit bg-amber-200 p-1 text-center my-3 border-2 border-white/25 rounded-lg cursor-pointer\"\r\n        onClick={handlePrev}\r\n      >\r\n        Previous\r\n      </div>\r\n      <div className=\"border-8 border-red-600 rounded-full w-full header  bg-orange-200 text-lg mb-3 p-3 md:mt-10\">\r\n        <h1 className=\"text-center \">\r\n          Individual page of : <br />\r\n          <span\r\n            className={\r\n              \"font-bold text-2xl name\" + pokemonDetail.types[0].type.name\r\n            }\r\n          >\r\n            <p className=\" first-letter:uppercase\">{pokemonDetail.name}</p>\r\n          </span>\r\n        </h1>\r\n      </div>\r\n      {/* Carte du Pokemon */}\r\n      <div\r\n        className={clsx(\r\n          \"card rounded-3xl border-[10px] border-white/25 grid grid-cols-12 p-3 m-3 \",\r\n          pokemonDetail.types[0].type.name\r\n        )}\r\n      >\r\n        <img\r\n          src={\r\n            pokemonDetail.sprites.other.home.front_default\r\n              ? pokemonDetail.sprites.other.home.front_default\r\n              : pokemonDetail.sprites.other.dream_world.front_default\r\n          }\r\n          alt={\"Picture of \" + pokemonDetail.name}\r\n          className=\"col-span-12 mx-auto md:col-span-4 my-auto\"\r\n        />\r\n\r\n        <table className=\"col-span-12 sm:col-start-1 sm:col-span-4 sm:mb-6 md:col-span-3 \">\r\n          <thead className=\"\">\r\n            <tr className=\"exeption\">\r\n              <th colSpan={2} className=\" h-14\">\r\n                Specific Informations\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"  \">\r\n            <tr className=\"\">\r\n              <th>ID:</th>\r\n              <td>{pokemonDetail.id}</td>\r\n            </tr>\r\n            {pokemonDetail.types.map((type, index) => (\r\n              <tr key={index}>\r\n                <th>Type {numberOfTypes > 1 ? index + 1 : \"\"}:</th>\r\n                <td className=\"first-letter:uppercase\">{type.type.name}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <th>Heigh:</th>\r\n              <td>{pokemonDetail.height}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Weight</th>\r\n              <td>{pokemonDetail.weight}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <table className=\"col-span-12 sm:col-end-13 sm:col-span-4 md:col-span-3 md:col-end-13\">\r\n          <thead className=\"\">\r\n            <tr className=\"exeption \">\r\n              <th colSpan={2} className=\"h-14\">\r\n                Basic Abilities\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pokemonDetail.abilities.map((ability, index) => (\r\n              <tr key={index}>\r\n                <th>Ability {numberOfAbilities > 1 ? index + 1 : \"\"}</th>\r\n                <td className=\"first-letter:uppercase\">\r\n                  {ability.ability.name}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport function ErrorBoundary() {\r\n  const params = useParams();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  return (\r\n    <div className=\"error-container flex flex-col justify-center w-full\">\r\n      <h1 className=\" mx-auto my-5\">\r\n        {`Error ! We didn't find pokemon \"${params.pokemonId}\", try an other one please `}\r\n      </h1>\r\n      <form className=\" text-center mx-auto \" action={`/pokedex/${search}`}>\r\n        <input\r\n          className=\" text-center mx-auto my-5\"\r\n          placeholder=\"Type a pokemon name or ID\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input type=\"submit\" className=\"my-5\" value={\"Search\"} />\r\n        <NavLink to={\"/pokedex\"}> Home </NavLink>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n", "import { useQuery } from \"react-query\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport Logout from \"~/components/Logout\";\r\n\r\ntype Pokemon = {\r\n  name: string;\r\n  url: string;\r\n  id: number;\r\n  sprite: string | null;\r\n  type: string;\r\n};\r\ntype PokePagination = { offset: string | null; limit: string | null };\r\ntype LoaderData = {\r\n  pokemonList: Pokemon[];\r\n  currentPage: String;\r\n  nextContext: PokePagination | null;\r\n  previousContext: PokePagination | null;\r\n};\r\ntype PokemonDetailResponse = {\r\n  id: number;\r\n  sprites: {\r\n    front_default: string;\r\n    other: {\r\n      home: { front_default: string };\r\n      dream_world: {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  types: [{ type: { name: string } }];\r\n};\r\n\r\nconst getPaginationInfo = (url: string | null) => {\r\n  if (!url) return null;\r\n  const { searchParams } = new URL(url);\r\n  return {\r\n    offset: searchParams.get(\"offset\"),\r\n    limit: searchParams.get(\"limit\"),\r\n  };\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { searchParams } = new URL(request.url);\r\n  const limit = searchParams.get(\"limit\");\r\n  const offset = searchParams.get(\"offset\");\r\n  const currentPage = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n  const {\r\n    data: { results, next, previous },\r\n  } = await axios.get(currentPage);\r\n  const pokemonList: Pokemon[] = results;\r\n  /* const promises = [];\r\n  for (const pokemon of pokemonList) {\r\n    promises.push(axios.get(pokemon.url));\r\n  }\r\n  const toto = await Promise.all(promises);\r\n  toto.forEach((element) => {\r\n    const index = pokemonList.findIndex(\r\n      (pokemon) => pokemon.name === element.data.name\r\n    );\r\n    if (index == -1) return;\r\n    pokemonList[index].id = element.data.id;\r\n    pokemonList[index].sprite =\r\n      element.data.sprites.other.dream_world.front_default;\r\n    pokemonList[index].type = element.data.types[0].type.name;\r\n  }); */\r\n  const nextContext = getPaginationInfo(next);\r\n  const previousContext = getPaginationInfo(previous);\r\n\r\n  const data: LoaderData = {\r\n    currentPage,\r\n    pokemonList,\r\n    nextContext,\r\n    previousContext,\r\n  };\r\n\r\n  return json(data);\r\n};\r\n\r\nconst PokemonCard = ({ name, url }: Pokemon) => {\r\n  const { data, isLoading } = useQuery(\r\n    [\"detail\", name],\r\n    (): Promise<{ data: PokemonDetailResponse }> => axios.get(url)\r\n  );\r\n\r\n  const res = data?.data;\r\n\r\n  return (\r\n    <li\r\n      key={name}\r\n      className={clsx(\r\n        \"rounded-xl border-8 border-white/25 col-span-full md:col-span-6 lg:col-span-2 flex flex-col hover:scale-105 transition duration-150 ease-in-out \",\r\n        res?.types[0].type.name\r\n      )}\r\n    >\r\n      {isLoading ? (\r\n        <div className=\"picture w-48 h-48\"></div>\r\n      ) : (\r\n        <div className=\"picture mx-auto my-3\">\r\n          <img\r\n            src={\r\n              res?.sprites.other.dream_world.front_default\r\n                ? res?.sprites.other.dream_world.front_default\r\n                : res?.sprites.other.home.front_default\r\n            }\r\n            alt={\"picture of\" + name}\r\n            className=\"h-48 w-auto p-2\"\r\n          />\r\n        </div>\r\n      )}\r\n      <br />\r\n      <div className=\" w-3/4 p-2 cardInfo mx-auto text-center bg-slate-300\">\r\n        <p className=\" text-center\">Name:</p>\r\n        <p className=\" first-letter:uppercase\">{name}</p>\r\n        <br />\r\n        {!isLoading && (\r\n          <>\r\n            <p>Id: </p>\r\n            <span>{res?.id}</span>\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Link to={name} className=\"mx-auto my-2\">\r\n        <div className={\"button\"}> Infos </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\nexport default function Index() {\r\n  const { pokemonList, nextContext, previousContext } =\r\n    useLoaderData<LoaderData>();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\" w-full flex flex-col\">\r\n      <Logout />\r\n      <h1 className=\" text-center my-5 py-1\">Index</h1>\r\n      {/* Ajout d'une barre de recherche */}\r\n      <form className=\" text-center mx-auto\" action={`/pokedex/${search}`}>\r\n        <input\r\n          className=\" text-center mx-auto\"\r\n          placeholder=\"Type a pokemon name or ID\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />{\" \"}\r\n        <br />\r\n        <input type=\"submit\" />\r\n      </form>\r\n      <ul className=\" grid grid-cols-12 gap-4 px-2 md:px-4 mt-5\">\r\n        {pokemonList.map((p) => (\r\n          <PokemonCard key={p.name} {...p} />\r\n        ))}\r\n      </ul>\r\n      <div className=\"sub_Menu mt-5\">\r\n        {previousContext && (\r\n          <div className=\"menu_Button\">\r\n            <Link\r\n              to={`/pokedex?offset=${previousContext.offset}&limit=${previousContext.limit}`}\r\n            >\r\n              Pr\u00E9c\u00E9dent\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {nextContext && (\r\n          <div className=\"menu_Button\">\r\n            <Link\r\n              to={`/pokedex?offset=${nextContext.offset}&limit=${nextContext.limit}`}\r\n            >\r\n              Suivant\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "const Logout = () => {\r\n  return (\r\n    <div className=\"absolute right-1 top-1 border-2 bg-red-400 p-3 rounded-xl\">\r\n      <button>D\u00E9connection</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n", "export default function Index() {\n  return (\n    <div className=\" w-full h-screen\">\n      <h1 className=\" text-center font-bold\">Hello pokedex!</h1>\n    </div>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useState } from \"react\";\r\nimport { getUser, login, register } from \"~/utils/auth.server\";\r\nimport type { Forms } from \"~/utils/types.server\";\r\nimport { validatePassword, validateUserName } from \"~/utils/validators.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return (await getUser(request)) ? redirect(\"/pokedex\") : null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"_action\");\r\n  const username = form.get(\"username\");\r\n  const password = form.get(\"password\");\r\n\r\n  if (\r\n    typeof action !== \"string\" ||\r\n    typeof username !== \"string\" ||\r\n    typeof password !== \"string\"\r\n  ) {\r\n    return json({ error: \"Invalid Form Data\" }, { status: 400 });\r\n  }\r\n  const errors = {\r\n    username: validateUserName(username),\r\n    password: validatePassword(password),\r\n  };\r\n  if (Object.values(errors).some(Boolean))\r\n    return json(\r\n      {\r\n        errors,\r\n        fields: { username, password },\r\n        form: action,\r\n      },\r\n      { status: 400 }\r\n    );\r\n  switch (action) {\r\n    case \"login\": {\r\n      return login({ username, password });\r\n    }\r\n    case \"register\": {\r\n      return await register({ username, password });\r\n    }\r\n    default:\r\n      return json({ error: \"invalid form data\" }, { status: 400 });\r\n  }\r\n  //return await register({ username, password });\r\n};\r\n\r\nexport default function Login() {\r\n  const handleInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    field: string\r\n  ) => {\r\n    setFormData((form: Forms) => ({ ...form, [field]: event.target.value }));\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [action, setAction] = useState(\"login\");\r\n  return (\r\n    <div className=\"main\">\r\n      <button\r\n        onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}\r\n        className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n      >\r\n        {action === \"login\" ? \"S'inscrire\" : \"Se connecter\"}\r\n      </button>\r\n      <h1>Hello login</h1>\r\n      <h2>Subscribe and get your own pokedex!</h2>\r\n      <form method=\"POST\">\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={(e) => handleInputChange(e, \"username\")}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => handleInputChange(e, \"password\")}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          name=\"_action\"\r\n          value={action}\r\n          className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n        >\r\n          {action == \"login\" ? \"Se connecter\" : \"S'inscrire\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\nlet prisma: PrismaClient;\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n  prisma.$connect();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n    global.__db.$connect();\r\n  }\r\n  prisma = global.__db;\r\n}\r\n\r\nexport * from \"@prisma/client\";\r\nexport { prisma };\r\n", "import { prisma } from \"./prisma.server\";\r\nimport type { Forms } from \"./types.server\";\r\nimport { createCookieSessionStorage, json, redirect } from \"@remix-run/node\";\r\nimport { createUser } from \"./users.server\";\r\nimport bcrypt from \"bcryptjs\";\r\nconst token = process.env.TOKEN_SECRET;\r\nif (!token) {\r\n  throw new Error(\"TOKEN_SECRET must be set\");\r\n}\r\n\r\nconst storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"pokedex-session\",\r\n    secure: process.env.NODE_ENV == \"production\",\r\n    secrets: [token],\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n});\r\n\r\n//Create user\r\nexport const register = async (form: Forms) => {\r\n  const userExist = await prisma.user.count({\r\n    where: { username: form.username },\r\n  });\r\n\r\n  if (userExist) {\r\n    return json(\r\n      {\r\n        error: \"User already exist\",\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  const newUser = await createUser(form);\r\n\r\n  if (!newUser) {\r\n    return json({ error: \"something went wrong\" }, { status: 400 });\r\n  }\r\n  return createUserSession(newUser.id, \"/\");\r\n};\r\n\r\nexport const login = async (form: Forms) => {\r\n  const user = await prisma.user.findUnique({\r\n    where: { username: form.username },\r\n  });\r\n\r\n  if (!user || !(await bcrypt.compare(form.password, user.password))) {\r\n    return json({ error: \"Erreur dans le formulaire de connection\" });\r\n  }\r\n  return createUserSession(user.id, \"/\");\r\n};\r\n\r\n//create a session\r\n\r\nexport const createUserSession = async (userId: string, redirectTo: string) => {\r\n  const session = await storage.getSession();\r\n  session.set(\"userId\", userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.commitSession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const session = await getUserSession(request);\r\n\r\n  const userId = session.get(\"userId\");\r\n\r\n  if (!userId || typeof userId !== \"string\") {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\nfunction getUserSession(request: Request) {\r\n  return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\n\r\nasync function getUserId(request: Request) {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n  if (!userId || typeof userId !== \"string\") return null;\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (typeof userId !== \"string\") return null;\r\n  try {\r\n    const user = await prisma.user.findUnique({\r\n      where: { id: userId },\r\n      select: { id: true, username: true, pokemonCatch: true },\r\n    });\r\n    return user;\r\n  } catch {\r\n    throw logout(request);\r\n  }\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getUserSession(request);\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n", "import type { Forms } from \"./types.server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { prisma } from \"./prisma.server\";\r\n\r\nexport const createUser = async (user: Forms) => {\r\n  const passwordHash = await bcrypt.hash(user.password, 10);\r\n\r\n  const newUser = await prisma.user.create({\r\n    data: {\r\n      username: user.username,\r\n      password: passwordHash,\r\n    },\r\n  });\r\n  return { id: newUser.id, username: newUser.username };\r\n};\r\n", "export const validateEmail = (email: string): string | undefined => {\r\n  const validRegex =\r\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  if (!email.length || !validRegex.test(email)) {\r\n    return \"please enter a valid email adress\";\r\n  }\r\n};\r\n\r\nexport const validatePassword = (password: string): string | undefined => {\r\n  if (password.length < 5) {\r\n    return \"Password must be at least 5 characters\";\r\n  }\r\n};\r\nexport const validateUserName = (username: string): string | undefined => {\r\n  if (username.length < 3) return \"Username must be at least 3 characters\";\r\n};\r\n", "export default {'version':'59838467','entry':{'module':'/build/entry.client-TDUGHCQB.js','imports':['/build/_shared/chunk-TF7DY7FC.js','/build/_shared/chunk-IFIE4423.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NME5WU74.js','imports':['/build/_shared/chunk-EME37VPS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-RGHZPRHH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-I564YZUN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pokedex/$pokemonId':{'id':'routes/pokedex/$pokemonId','parentId':'root','path':'pokedex/:pokemonId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pokedex/$pokemonId-YMNB6WWF.js','imports':['/build/_shared/chunk-NFGN2PDK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/pokedex/index':{'id':'routes/pokedex/index','parentId':'root','path':'pokedex','index':true,'caseSensitive':undefined,'module':'/build/routes/pokedex/index-D6QDJOWM.js','imports':['/build/_shared/chunk-NFGN2PDK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-59838467.js'};", "\nimport * as entryServer from \"C:\\\\dev\\\\pokedex\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\dev\\\\pokedex\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\pokedex\\\\$pokemonId.tsx\";\nimport * as route2 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\pokedex\\\\index.tsx\";\nimport * as route3 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\index.tsx\";\nimport * as route4 from \"C:\\\\dev\\\\pokedex\\\\app\\\\routes\\\\login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/pokedex/$pokemonId\": {\n      id: \"routes/pokedex/$pokemonId\",\n      parentId: \"root\",\n      path: \"pokedex/:pokemonId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/pokedex/index\": {\n      id: \"routes/pokedex/index\",\n      parentId: \"root\",\n      path: \"pokedex\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
